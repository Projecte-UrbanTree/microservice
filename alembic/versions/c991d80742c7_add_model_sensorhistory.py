"""add model SensorHistory

Revision ID: c991d80742c7
Revises: 
Create Date: 2025-02-03 18:58:17.543554

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'c991d80742c7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensorhistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('deduplication_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('tenant_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('tenant_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('application_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('application_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('device_profile_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('device_profile_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('device_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('dev_eui', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('device_class_enabled', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('dev_addr', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('adr', sa.Boolean(), nullable=True),
    sa.Column('dr', sa.Integer(), nullable=True),
    sa.Column('f_cnt', sa.Integer(), nullable=True),
    sa.Column('f_port', sa.Integer(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('data', sa.Text(), nullable=True),
    sa.Column('message_type', sa.Integer(), nullable=True),
    sa.Column('water_soil', sa.Float(), nullable=True),
    sa.Column('conductor_soil', sa.Integer(), nullable=True),
    sa.Column('temp_soil', sa.Float(), nullable=True),
    sa.Column('bat', sa.Float(), nullable=True),
    sa.Column('tempc_ds18b20', sa.Float(), nullable=True),
    sa.Column('interrupt_flag', sa.Integer(), nullable=True),
    sa.Column('phi_soil', sa.Float(), nullable=True),
    sa.Column('gateway_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('uplink_id', sa.Integer(), nullable=True),
    sa.Column('gw_time', sa.DateTime(), nullable=True),
    sa.Column('rssi', sa.Integer(), nullable=True),
    sa.Column('snr', sa.Float(), nullable=True),
    sa.Column('channel', sa.Integer(), nullable=True),
    sa.Column('rf_chain', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('context', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('crc_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('modulation', sa.JSON(), nullable=True),
    sa.Column('region_config_id', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('deduplication_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensorhistory')
    # ### end Alembic commands ###
